{
    "1": {
        "name": "JavaJar",
        "extension": "jar",
        "commands": {
            "run": "java -Djava.security.manager -jar ~sourcefile~"
        }
    },
    "2": {
        "name": "JavaZip",
        "extension": "zip",
        "commands": {
            "unzip": "unzip ~sourcefile~",
            "compile": "javac Program.java",
            "run": "java -Djava.security.manager Program"
        }
    },
    "3": {
        "name": "Jython",
        "extension": "py",
        "commands": {
            "run": "jython -Djava.security.manager ~sourcefile~"
        }
    },
    "4": {
        "name": "Python",
        "extension": "py",
        "commands": {
            "run": "python ~sourcefile~"
        }
    },
    "5": {
        "name": "C",
        "extension": "c",
        "commands": {
            "compile": "gcc -o ~sourcefile_noex~.out ~sourcefile~ -lm",
            "run": "./~sourcefile_noex~.out"
        },
        "tests": {
            "compile": "~sourcefile_noex~.out"
        }
    },
    "6": {
        "name": "C++",
        "extension": "cpp",
        "commands": {
            "compile": "g++ -o ~sourcefile_noex~.out ~sourcefile~ -lm",
            "run": "./~sourcefile_noex~.out"
        },
        "tests": {
            "compile": "~sourcefile_noex~.out"
        }
    },
    "7": {
        "name": "Octave",
        "extension": "m",
        "commands": {
            "run": "octave ~input~ ~sourcefile~"
        }
    },
    "8": {
        "name": "JavaZip_Custom",
        "extension": "zip",
        "commands": {
            "unzip": "unzip ~sourcefile~",
            "rename": "mv ~input~ Test.java",
            "compile": "javac Test.java",
            "run": "java -Djava.security.manager Test"
        }
    },
"9": {
        "name": "C_Custom",
        "extension": "c",
        "commands": {
            "rm_imain" : "sed -i 's:int\\s*main\\s*(:int old_main(:g' ~sourcefile~",
            "rm_vmain" : "sed -i 's:void\\s*main\\s*(:void old_main(:g' ~sourcefile~",
            "concat": "cat ~sourcefile~ `echo` ~input~  > combined.c",
            "compile": "gcc -o combined combined.c -lm",
            "run": "./combined"
        },
        "tests": {
            "compile": "combined"
        }
    },
"10": {
        "name": "matlab",
        "extension": "m",
        "commands": {
            "makeTester" : "printf \"outfile = sprintf('outfile.tmp');\\nfh = fopen(outfile, 'w');\\nstr = evalc('test()');\\nfprintf(fh, '%%s', str);\\nfclose(fh);\\nquit\\n\" > tester.m",
            "makeCaller" : "printf \"\\n\\n\" | cat ~input~ - ~sourcefile~ > test.m",
            "time0": "matlab -wait -nosplash -nodesktop < tester.m >random",
            "run": "cat outfile.tmp"
        }
    }

}

